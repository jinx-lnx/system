#!/bin/bash

# Defaults
SALTGRAINSFILE="/etc/gwn/server.conf"					# Based Configuration Information
FILEHEADER="#\n# This File is Automatically Generated by $0\n#\n\n"	# Header for the top of the Generated Files
CACHAIN="/etc/ssl/GWNCACertChain.pem"           			# Final Destination for the Concatenated Chain
CRLCHAIN="/etc/ssl/GWNCRLs.pem"                 			# Final Destination for the Concatenated set of CRLs
DEFAULTISSUERS="${DEFAULTISSUERS} ed7303c5" 				# Staff CA
DEFAULTISSUERS="${DEFAULTISSUERS} c51ffa49" 				# GWN Root CA
LICENSINGURL="https://licensing.getwellnetwork.com/certificates/v1"	# URL to Fetch the CA Certificates and CRLs from 

function log() {
	logger -t ssl-file-manager "${1}"
}

function RegenerateChains() {

	[ -n "$1" ] && log "Watched File Changed [$1] - Regenerating Cert and CRL Chains"

	FAIL=0
	RESTART_SERVICES=0
	TMP_CACHAIN="$(mktemp)"
	TMP_CRLCHAIN="$(mktemp)"
	trap "rm -f '$TMP_CACHAIN' '$TMP_CRLCHAIN'" EXIT

	# Seed the Files
	echo -e "${FILEHEADER}" > "${TMP_CACHAIN}"
	echo -e "${FILEHEADER}" > "${TMP_CRLCHAIN}"
	# Get the GetWellNetwork Issued CAs and the necessary CRLs
	ISSUERS="${DEFAULTISSUERS} $(echo -e "import yaml;x=yaml.load(open('${SALTGRAINSFILE}'))['grains']['gwn'];print ' '.join([str(y) for y in x['trusted_issuers'].keys()]) if 'trusted_issuers' in x and isinstance(x['trusted_issuers'],dict) else ''" | python 2>/dev/null)"
	if [ -n "${ISSUERS}" ] ; then
		for issuer in ${ISSUERS}; do
			# Get The CAs and Append them to the Chain
			log "Appending ${LICENSINGURL}/getca/${issuer}/ to CA Chain"
			wget -q -O- ${LICENSINGURL}/getca/${issuer}/ >> "${TMP_CACHAIN}" || { log "Fail to Fetch ${issuer} CA Certificate" ; FAIL=1 ; }
			echo -e "\n" >> "${TMP_CACHAIN}"

			# Get The CRLs and Append them to the Chain
			log "Appending ${LICENSINGURL}/getcrl/${issuer}/ to CRL Chain"
			wget -q -O- ${LICENSINGURL}/getcrl/${issuer}/ >> "${TMP_CRLCHAIN}" || { log "Fail to Fetch ${issuer} CRL" ; FAIL=1 ; }
			echo -e "\n" >> "${TMP_CRLCHAIN}"
		done
	fi

	# Handle any Extra CAs that are needed by the Custom Management Console Cert
	EXTRAISSUERS="$(echo -e "import yaml; print yaml.load(open('${SALTGRAINSFILE}'))['grains']['gwn']['mc_custom_cert']['ca']" | python 2>/dev/null)"
	if [ -n "${EXTRAISSUERS}" -a -f "${EXTRAISSUERS}" ] ; then
		log "Appending $EXTRAISSUERS to CA Chain"
		cat "${EXTRAISSUERS}" >> "${TMP_CACHAIN}" || { log "Fail to append MC Cert CA ${EXTRAISSUERS} Certificate" ; FAIL=1 ; }
	fi

	# Are there any CA chains in /etc/ssl/gwn, the new SSL cert location for GWN certs?
	if [ -d /etc/ssl/gwn ] ; then
		for C in $(find /etc/ssl/gwn -name '*-CA.pem' -type f) ; do
			log "Appending CA chain from ${C}"
			cat "${C}" >> "${TMP_CACHAIN}" || { log "Fail to append chain ${C}" ; FAIL=1 ; }
		done
	fi

	# Deduplicate the CA Chain based on Subject
	log "Deduplicating CA chain"
	openssl crl2pkcs7 -nocrl -certfile "${TMP_CACHAIN}" | openssl pkcs7 -print_certs | awk 'BEGIN {RS="\n\n+"; FS="\n"} { if (x[$1] == 0 ) {print; print ""} x[$1]++ }' > "${TMP_CACHAIN}.DEDUPED"
	mv "${TMP_CACHAIN}.DEDUPED" "${TMP_CACHAIN}"


	if [ ${FAIL:0} -eq 0 ] ; then
		# Everything Worked - Save the File
		if  [ "$(md5sum "${TMP_CACHAIN}" | cut -c 1-32)" != "$(md5sum "${CACHAIN}" | cut -c 1-32)" ] ; then
			cat "${TMP_CACHAIN}" > "${CACHAIN}"
			log "Moving new CA chain to ${CACHAIN}"
			RESTART_SERVICES=1
		fi
		if  [ "$(md5sum "${TMP_CRLCHAIN}" | cut -c 1-32)" != "$(md5sum "${CRLCHAIN}" | cut -c 1-32)" ] ; then
			cat "${TMP_CRLCHAIN}" > "${CRLCHAIN}"
			log "Moving new CRL file to ${CRLCHAIN}"
			RESTART_SERVICES=1
		fi
		if [ ${RESTART_SERVICES:-0} -eq 1 ] ; then
			log "CA Files have Changed - Sending reload (SIGHUP) command to web/vpn services"
			# To avoid having to deal with multiple OS versions and send openvpn SIGHUP signals where
			# no OpenVPN is running, simply send a SIGHUP to any web server or openvpn processes,
			# _if they are running_.
			for SRV in nginx openvpn ; do
				if pidof ${SRV} >/dev/null ; then
					log "Restarting service ${SRV}"
					killall -SIGHUP ${SRV}
				fi
			done
		else
			log "CA chain and CRL file have not changed. No need to restart web/vpn services."
		fi
	else
		log "One or more of the Certificates or CRLs on $(hostname) were not able to be retrieved. Check Configuration" # /opt/gwn/python/servermail.py -s "$(hostname) Certificate Configuration Issue"
	fi

	# Clean Up
	[ -f "${TMP_CACHAIN}" ] && rm -f "${TMP_CACHAIN}"
	[ -f "${TMP_CRLCHAIN}" ] && rm -f "${TMP_CRLCHAIN}"
}

# Do it once on Startup...
RegenerateChains

# Watch the File System and Handle Changes
inotifywait -r -m -e moved_to -e close_write -e delete --format '%w%f' /etc/ssl /etc/gwn --exclude "${CACHAIN}" --exclude "${CRLCHAIN}" | while read CHANGEDFILE ; do
	if [ "${CACHAIN}" != "${CHANGEDFILE}" -a "${CRLCHAIN}" != "${CHANGEDFILE}" ] ; then 
		# Skip Files We Write...
		RegenerateChains $CHANGEDFILE
	fi

	# Add some wait time to not cause multiple file changes break restarts
	sleep 5
done

