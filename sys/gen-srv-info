#!/bin/bash -u

# Gather a few important facts about this server and show the summary
# when someone logs into the server.


# -------------------------------------------------------------------
# OS VERSION
# -------------------------------------------------------------------

LSB=$(/usr/bin/lsb_release -rs)
if [ "${LSB}" == "12.04" ] ; then
  OS="\e[41m$(/usr/bin/lsb_release -sd)\e[49m"
elif [ "${LSB}" == "16.04" ] ; then
  OS="\e[45m$(/usr/bin/lsb_release -sd)\e[49m"
else
  OS="$(/usr/bin/lsb_release -sd)"
fi


# -------------------------------------------------------------------
# SERVER TYPE
# -------------------------------------------------------------------

# The output of imvirt is not stable and sometimes shows "Unknown",
# so we will just distinguish between Physical and non-Physical.
# For some improvement, let's try the imvirt command up to 5 times
# or until it returns anything else but 'Unknown'.

for I in $(seq 5) ; do
  TYPE=$(/usr/bin/imvirt 2>/dev/null)
  if [ "${TYPE}" != "Unknown" ] ; then
    break
  fi
  sleep .5
done

MODEL=
if [ -n "${TYPE}" ] ; then
  if [ "${TYPE}" != "Physical" ] ; then
    TYPE="Virtual (${TYPE})"
  else
    # Try to guess the actual server model
    PROD=$(/usr/sbin/smbios-sys-info-lite | grep "^Product Name:" | cut -d ':' -f2 | sed -e 's/^[ ]\+//')
    if [ -n "${PROD}" ] ; then
      MODEL=" (${PROD})"
    else
      OEM=$(/usr/sbin/smbios-sys-info-lite | grep "^OEM System ID:" | cut -d ':' -f2 | sed -e 's/^[ ]\+//')
      if [ "${OEM}" == "0x8127" ] ; then
        MODEL=" (PowerEdge R420)"
      elif [ "${OEM}" == "0x8162" ] ; then
        MODEL=" (PowerEdge R430)"
      fi
    fi
  fi
else
  TYPE="UNKOWN"
fi


# -------------------------------------------------------------------
# WEB SERVER (nginx or lighttpd)
# -------------------------------------------------------------------

# Determine whether we are running lighttpd or nginx
RELEASE=$(lsb_release -rs)
if [ "${RELEASE}" == "12.04" -o "${RELEASE}" == "14.04" ] ; then
  # Upstart
  WEB=$(service --status-all 2>&1 | egrep " \[ \+ \]  (nginx|lighttpd)" | cut -c9-)
else
  # Systemd
  WEB=$(systemctl list-unit-files --type=service | egrep "^(nginx|lighttpd).*enabled" | cut -d'.' -f1)
fi


# -------------------------------------------------------------------
# FIREWALL TYPE
# -------------------------------------------------------------------

if [ -x /usr/sbin/ufw ] ; then
  FIREWALL="ufw"
elif [ -x /sbin/iptables ] ; then
  FIREWALL="\e[45mplain iptables\e[49m"
else
  FIREWALL="\e[41mUNKNOWN\e[49m"
fi


# -------------------------------------------------------------------
# APPLICATION SERVER
# -------------------------------------------------------------------

# A bit clumsy, but works...

# Are we a RAS?
if [ -x /usr/sbin/crm ] ; then
  RES=$(/usr/sbin/crm resource show | grep Wildfly)
  if [ -n "${RES}" ] ; then
    APP="Wildfly Cluster"
  else
    RES=$(/usr/sbin/crm resource show | grep JBoss)
    if [ -n "${RES}" ] ; then
      APP="JBoss7 Cluster"
    else
      APP=""
    fi
  fi
else
  # Standalone appserver?
  /sbin/initctl show-config wildfly 2>/dev/null | grep -q "start on"
  if [ $? -eq 0 ] ; then
    APP="Wildfly"
  else
    /sbin/initctl show-config gwn-jboss 2>/dev/null | grep -q "start on"
    if [ $? -eq 0 ] ; then
      APP="JBoss7"
    else
      APP=""
    fi
  fi
fi



# -------------------------------------------------------------------
# Next auto-highstate
# -------------------------------------------------------------------
AUTO_DAY=$(/opt/gwn/python/timeslot-hasher.py --tag HIGHSTATE --weekdays mon tue wed thu fri --hours 0 1 2 3 4 5 6 7 | grep '"picked_weekday"' | sed 's/^.*: //')
AUTO_HR=$(/opt/gwn/python/timeslot-hasher.py --tag HIGHSTATE --weekdays mon tue wed thu fri --hours 0 1 2 3 4 5 6 7 | grep '"picked_hour"' | sed 's/^.*: //')
AUTO_QTR=$(/opt/gwn/python/timeslot-hasher.py --tag HIGHSTATE --weekdays mon tue wed thu fri --hours 0 1 2 3 4 5 6 7 | grep '"picked_quarter"' | sed 's/^.*: //')


cat << EOF > /etc/profile.d/gwn-show-srv.sh
# ----------------------------------------------------
# Auto-generated by /opt/gwn/system/create-srv-summary
# ----------------------------------------------------

printf "\n"
printf "  +-----------------------------------------------------+\n"
printf "     Server OS            ${OS}\n"
printf "  +-----------------------------------------------------+\n"
printf "     Server Type          ${TYPE} ${MODEL}\n"
printf "  +-----------------------------------------------------+\n"
printf "     Web Server           ${WEB}\n"
printf "  +-----------------------------------------------------+\n"
printf "     Firewall             ${FIREWALL}\n"
printf "  +-----------------------------------------------------+\n"
EOF

if [ -n "${APP}" ] ; then
cat << EOF >> /etc/profile.d/gwn-show-srv.sh
printf "     Application Server   ${APP}\n"
printf "  +-----------------------------------------------------+\n"
EOF
fi

cat << EOF >> /etc/profile.d/gwn-show-srv.sh
printf "     Last Highstate       \$(find /etc/salt/last-highstate.txt -printf '%CY-%Cm-%Cd %Ca %CH:%CM %CZ')\n"
printf "     Auto Highstate       ${AUTO_DAY} hour ${AUTO_HR} quarter ${AUTO_QTR}\n"
printf "  +-----------------------------------------------------+\n"
EOF
printf 'printf "\n"\n' >> /etc/profile.d/gwn-show-srv.sh
